{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\uAE40\\uC720\\uB9BC\\\\react_fb_bbs\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport AppRouter from './Router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //firebase 에 currentUser는 현재 유저의 유무\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setIsLoggedIn(true);\n        console.log(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n    setInit(true);\n  }, []);\n  //한번만 작동\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React BBS - firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ptuVdtUS6m3ICSoMd6VgFQrjPsU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","AppRouter","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","init","setInit","isLoggedIn","setIsLoggedIn","auth","user","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/김유림/react_fb_bbs/src/components/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../App.css';\nimport AppRouter from './Router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //firebase 에 currentUser는 현재 유저의 유무\n \n  useEffect(()=>{\n    const auth = getAuth();\n\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        console.log(user);\n      \n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n    setInit(true);\n   \n  }, [])  \n  //한번만 작동\n\n  \n  return (\n    <>\n      <h2>React BBS - firebase</h2>\n      <AppRouter isLoggedIn={isLoggedIn}/>\n    </>\n   \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,UAAU;AAChC,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD;;EAEAD,SAAS,CAAC,MAAI;IACZ,MAAMe,IAAI,GAAGZ,OAAO,CAAC,CAAC;IAEtBC,kBAAkB,CAACW,IAAI,EAAGC,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACRF,aAAa,CAAC,IAAI,CAAC;QACnBG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEnB,CAAC,MAAM;QACLF,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,CAAC;IACFF,OAAO,CAAC,IAAI,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EACN;;EAGA,oBACEN,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BjB,OAAA,CAACJ,SAAS;MAACW,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACpC,CAAC;AAGP;AAACb,EAAA,CA9BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}