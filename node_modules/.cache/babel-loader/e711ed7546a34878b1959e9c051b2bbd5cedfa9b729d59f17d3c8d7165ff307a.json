{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\uAE40\\uC720\\uB9BC\\\\react_fb_bbs\\\\src\\\\routes\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { authService } from '../firebase';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const auth = getAuth();\n  const onSubmit = e => {\n    e.preventDefault();\n    if (newAccount) {\n      //create Acount 회원가입\n      createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n        // Signed in \n        const user = userCredential.user;\n        console.log(user);\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n        setError(errorMessage);\n        // ..\n      });\n    } else {\n      //로그인\n      signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n        const user = userCredential.user;\n        console.log(user);\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n    }\n  };\n  const onChange = e => {\n    // let name = e.target.value;\n    const {\n      target: {\n        name,\n        value\n      }\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n  const toggleAccount = prev => setNewAccount(prev => !prev);\n  //이전 값의 반대로 변경 true or false\n  const onSocialClick = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.customData.email;\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"email\",\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [newAccount ? \"create Account\" : \"Login\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSocialClick,\n        children: [newAccount ? \"Google Sign up\" : \"Google Login\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), error, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleAccount,\n        children: [newAccount ? \"Login\" : \"create Account\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"uYpR5DnxPxX2adDlS4qxN6q8Pbc=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","authService","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","auth","onSubmit","e","preventDefault","then","userCredential","user","console","log","catch","errorCode","code","errorMessage","message","onChange","target","name","value","toggleAccount","prev","onSocialClick","provider","result","credential","credentialFromResult","token","accessToken","customData","credentialFromError","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/김유림/react_fb_bbs/src/routes/Auth.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { authService } from '../firebase';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup  } from \"firebase/auth\";\r\n\r\n\r\nconst Auth = ()=>{\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error,setError] = useState('');\r\n  const auth = getAuth();\r\n\r\n\r\n  const onSubmit = (e)=>{\r\n    e.preventDefault();\r\n    if(newAccount){\r\n      //create Acount 회원가입\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n          // Signed in \r\n          const user = userCredential.user;\r\n          console.log(user);\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          console.log(errorCode,errorMessage );\r\n          setError(errorMessage);\r\n          // ..\r\n        });\r\n    } else{\r\n      //로그인\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n          const user = userCredential.user;\r\n          console.log(user);\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          console.log(errorCode,errorMessage );\r\n        });\r\n    }\r\n  }\r\n\r\n  const onChange = (e) =>{\r\n    // let name = e.target.value;\r\n    const {target:{name, value}} = e;\r\n    if(name ===\"email\"){\r\n      setEmail(value);\r\n    }else{\r\n      setPassword(value);\r\n    }    \r\n  }\r\n  const toggleAccount = (prev)=>setNewAccount((prev)=>!prev)\r\n  //이전 값의 반대로 변경 true or false\r\n  const onSocialClick = ()=>{\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n      const credential = GoogleAuthProvider.credentialFromResult(result);\r\n      const token = credential.accessToken;\r\n      const user = result.user;\r\n    }).catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData.email;\r\n      const credential = GoogleAuthProvider.credentialFromError(error);\r\n      // ...\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <form onSubmit={onSubmit}>\r\n      <input name=\"email\" type=\"email\" placeholder='email' value={email} onChange={onChange}/>\r\n      <input name=\"password\" type=\"password\" placeholder='password' value={password} onChange={onChange}/>\r\n      <button type=\"submit\">{newAccount ? \"create Account\" : \"Login\"} </button>\r\n      <button type=\"button\" onClick={onSocialClick}>{newAccount ? \"Google Sign up\" : \"Google Login\"} </button>\r\n    </form>\r\n    <hr/>\r\n    {error}\r\n    <div>\r\n      <button type=\"button\" onClick={toggleAccount}>{newAccount ? \"Login\" : \"create Account\"} </button>\r\n\r\n    </div>\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}