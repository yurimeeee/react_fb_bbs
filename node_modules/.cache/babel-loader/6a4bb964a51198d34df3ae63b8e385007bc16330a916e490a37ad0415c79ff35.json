{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\uAE40\\uC720\\uB9BC\\\\react_fb_bbs\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\n// await deleteDoc(doc(db, \"cities\", \"DC\"));  //문서삭제\n// await 가 있으면 그 함수는 비동기 async야야함  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  postObj,\n  userConfirm\n}) => {\n  _s();\n  console.log(postObj);\n  const deletePost = async () => {\n    if (window.confirm('정말 삭제할까요?')) {\n      await deleteDoc(doc(db, \"posts\", postObj.id));\n    }\n  };\n  const [edit, setEdit] = useState(false);\n  const [newPost, setNewPost] = useState(postObj.content); //기존 값을 초기값으로 지정\n  const toggleEditMode = () => setEdit(prev => !prev); //기존 상태의 반대\n\n  const onChange = e => {\n    //e.target.value  //기존 문법\n    const {\n      target: {\n        value\n      }\n    } = e; //ES6 문법, 여러개 넘길떄 더 좋음. 하나는 비슷하긴함\n    setNewPost(value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children:\n    //참이면 수정모드 거짓이면 기존 글\n    edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: postObj.content,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEditMode,\n        children: \"cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: postObj.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), userConfirm && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditMode,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"BzKBrQrGkykZWWR2Kzqbps0hQ8c=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","doc","deleteDoc","db","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","postObj","userConfirm","_s","console","log","deletePost","window","confirm","id","edit","setEdit","newPost","setNewPost","content","toggleEditMode","prev","onChange","e","target","value","onSubmit","preventDefault","children","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/김유림/react_fb_bbs/src/components/Post.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { doc, deleteDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\n\r\n// await deleteDoc(doc(db, \"cities\", \"DC\"));  //문서삭제\r\n// await 가 있으면 그 함수는 비동기 async야야함  \r\n\r\n\r\nconst Post = ({postObj,userConfirm})=> {\r\n  console.log(postObj);\r\n  const deletePost = async ()=> {\r\n    if(window.confirm('정말 삭제할까요?')){\r\n      await deleteDoc(doc(db, \"posts\", postObj.id)); \r\n    }\r\n  }\r\n\r\nconst [edit, setEdit] = useState(false);\r\nconst [newPost, setNewPost] = useState(postObj.content);  //기존 값을 초기값으로 지정\r\nconst toggleEditMode = ()=> setEdit((prev)=>!prev); //기존 상태의 반대\r\n\r\nconst onChange = (e)=>{\r\n  //e.target.value  //기존 문법\r\n  const {target:{value}} = e;  //ES6 문법, 여러개 넘길떄 더 좋음. 하나는 비슷하긴함\r\n  setNewPost(value);\r\n}\r\n\r\n\r\nconst onSubmit = (e) =>{\r\n  e.preventDefault();\r\n}\r\n  return(\r\n \r\n    <li>\r\n      {\r\n        //참이면 수정모드 거짓이면 기존 글\r\n        edit ? (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input value={postObj.content} onChange={onChange} required/>\r\n              <button>Update Post</button>\r\n            </form>\r\n            <button onClick={toggleEditMode}>cancle</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{postObj.content}</h4>\r\n                { \r\n              userConfirm && (\r\n                <>\r\n                  <button onClick={deletePost}>Delete</button>  \r\n                  <button onClick={toggleEditMode}>Edit</button>  \r\n                </>\r\n              )\r\n            }\r\n          </>\r\n        )\r\n      }\r\n  </li>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}