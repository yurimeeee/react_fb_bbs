{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\uAE40\\uC720\\uB9BC\\\\react_fb_bbs\\\\src\\\\routes\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { doc, onSnapshot, query, orderBy, collection, addDoc, serverTimestamp, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport Post from \"../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  userObj\n}) => {\n  _s();\n  const [post, setPost] = useState('');\n  const [posts, setPosts] = useState([]); //조회된 글을 배열로 만듦\n\n  const onChange = e => {\n    //let value = e.target.value; // ECMA script 2012\n    const {\n      target: {\n        value\n      }\n    } = e; //ES6 문법\n    setPost(value);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      //오류 점검\n      const docRef = await addDoc(collection(db, \"posts\"), {\n        // posts는 컬렉션명\n        content: post,\n        date: serverTimestamp(),\n        //년월일시분초\n        uid: userObj.userObj\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  console.log(post);\n\n  /*\r\n  const getPost = async ()=> {\r\n    const querySnapshot = await getDocs(collection(db,  \"posts\"));\r\n    querySnapshot.forEach((doc) => {\r\n      const postObj = {\r\n        ...doc.data(), id:doc.id\r\n      }\r\n      setPosts((prev)=>[postObj,...prev]);\r\n    });\r\n  }\r\n    // const test = { id: 'id', title: 'title1', content:'content' }\r\n  // const testcopy = { ...test, title: 'title2'}\r\n  // console.log(testcopy);\r\n  */\n\n  useEffect(() => {\n    //componentDidMount\n    // getPost();\n    const q = query(collection(db, \"posts\"), orderBy(\"date\"));\n    onSnapshot(q, querySnapshot => {\n      // const cities = [];\n      // querySnapshot.forEach((doc) => {\n      //     cities.push(doc.data().name);\n      // });\n      const postArr = [];\n    });\n  }, []); //한번만 작동\n\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post,\n        placeholder: \"\\uD3EC\\uC2A4\\uD2B8 \\uC4F0\\uAE30\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(item => /*#__PURE__*/_jsxDEV(Post, {\n        postObj: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"ggftSZfHoe5weBYch/ktws6ltOM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","doc","onSnapshot","query","orderBy","collection","addDoc","serverTimestamp","getDocs","db","Post","jsxDEV","_jsxDEV","Home","userObj","_s","post","setPost","posts","setPosts","onChange","e","target","value","onSubmit","preventDefault","docRef","content","date","uid","console","log","id","q","querySnapshot","postArr","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","item","postObj","_c","$RefreshReg$"],"sources":["E:/김유림/react_fb_bbs/src/routes/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { doc, onSnapshot, query, orderBy, collection, addDoc, serverTimestamp, getDocs  } from \"firebase/firestore\"; \r\nimport { db } from \"../firebase\";\r\nimport Post from \"../components/Post\";\r\n\r\nconst Home = ({userObj})=>{\r\n  const [post, setPost] = useState('');\r\n  const [posts, setPosts] = useState([]);//조회된 글을 배열로 만듦\r\n\r\n  const onChange = (e)=>{\r\n   //let value = e.target.value; // ECMA script 2012\r\n   const {target:{value}} = e ; //ES6 문법\r\n   setPost(value);\r\n  }\r\n\r\n  const onSubmit = async (e)=>{\r\n    e.preventDefault();\r\n\r\n    try{  //오류 점검\r\n      const docRef = await addDoc(collection(db, \"posts\"), {  // posts는 컬렉션명\r\n        content: post,\r\n        date: serverTimestamp(), //년월일시분초\r\n        uid:userObj.userObj\r\n      });\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n      } catch(e) {\r\n      console.log(e)\r\n      }\r\n  }\r\n  console.log(post);\r\n\r\n\r\n  /*\r\n  const getPost = async ()=> {\r\n    const querySnapshot = await getDocs(collection(db,  \"posts\"));\r\n    querySnapshot.forEach((doc) => {\r\n      const postObj = {\r\n        ...doc.data(), id:doc.id\r\n      }\r\n      setPosts((prev)=>[postObj,...prev]);\r\n    });\r\n  }\r\n\r\n  // const test = { id: 'id', title: 'title1', content:'content' }\r\n  // const testcopy = { ...test, title: 'title2'}\r\n  // console.log(testcopy);\r\n*/\r\n\r\n  useEffect(()=>{ //componentDidMount\r\n    // getPost();\r\n    const q = query(collection(db, \"posts\"), orderBy(\"date\"));\r\n    onSnapshot(q, (querySnapshot) => {\r\n      // const cities = [];\r\n      // querySnapshot.forEach((doc) => {\r\n      //     cities.push(doc.data().name);\r\n      // });\r\n      const postArr = []\r\n    });\r\n  }, []) //한번만 작동\r\n\r\n  console.log(posts)\r\n\r\n\r\n  return(\r\n    <div>\r\n       <form  onSubmit={onSubmit}>\r\n        <input type=\"text\" value={post} placeholder=\"포스트 쓰기\" onChange={onChange}></input>\r\n        <input type=\"submit\" value=\"입력\"></input>\r\n       </form>\r\n       <hr/>\r\n       <ul>\r\n       {posts.map(item =>\r\n          <Post\r\n            key={item.id}\r\n            postObj={item}\r\n          />\r\n        )}\r\n       </ul>\r\n    </div>\r\n   \r\n  )\r\n}\r\n \r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}